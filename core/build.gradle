buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.1'
    }
}

apply plugin: 'java'
apply plugin: "com.github.johnrengelman.shadow"

group 'net.sf.openrocket'

Properties props = new Properties()
try {
    props.load(file('./src/main/resources/build.properties').newDataInputStream())
} catch (Exception ex) {
    throw new GradleException("3Missing build.properties. file: " + ex.getMessage())
}
version = props['build.version']

//sourceCompatibility = 1.8
sourceCompatibility = JavaVersion.VERSION_1_9
targetCompatibility = JavaVersion.VERSION_1_9

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25' // 1.7.30
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1' // 3.11
    compile group: 'com.google.inject', name: 'guice', version: '4.2.2' // 4.2.3
    compile group: 'com.opencsv', name: 'opencsv', version: '4.3.2' // 5.3
    compile group: 'eu.infomas', name: 'annotation-detector', version: '3.0.5'

    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    compile 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
    compile 'org.glassfish:javax.json:1.1.3' // 1.1.4
    compile 'org.eclipse:yasson:1.0.2' // 2.0.1
    compile group: 'javax.activation', name: 'javax.activation-api', version: '1.2.0'

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1' // 5.7.0
    testCompile group: 'org.jmock', name: 'jmock', version: '2.9.0' // 2.12
    testCompile group: 'org.jmock', name: 'jmock-junit4', version: '2.9.0' // 2.12.0
    testCompile 'junit:junit:4.12' // 4.3.1 org.junit.jupiter » junit-jupiter-api
}

task testBaseArtifactsJar(type: Jar) {
    classifier = "tests"
    from sourceSets.test.output
    exclude "**/META-INF", "**/pix", "**/arch", "**/communication", "**/database", "**/file", "**/l10n", "**/models", "**/motor", "**/optimization", "**/plugin", "**/preset", "**/rocketcomponent", "**/simulation", "**/startup", "**/unit"
    include "**/ServicesForTesting.class", "**/util/BaseTestCase.class"
}

configurations {
    testBaseArtifacts
}

artifacts {
    testBaseArtifacts testBaseArtifactsJar
}